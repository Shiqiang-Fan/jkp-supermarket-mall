buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url joyveb_repo }
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.netflix.nebula:gradle-ospackage-plugin:4.4.0")
    }
}
plugins {
    id "org.sonarqube" version "2.7"
}
apply plugin: 'nebula.ospackage'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.joyveb.ncps'
sourceCompatibility = 1.8   // JDK
tasks.withType(JavaCompile) { options.encoding = "UTF-8" }

sourceSets.main.java.srcDir 'src/main/java'   // 设置 Java 源码所在目录


repositories {
    mavenLocal()
    maven { url joyveb_repo }
    mavenCentral()
}
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version:'2.1.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.1.3.RELEASE'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version:'2.0.0'
    compile group: 'com.alibaba', name: 'druid', version:'1.0.18'
    compile group: 'org.projectlombok', name: 'lombok', version:'1.16.6'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    compile group: 'com.yunpian.sdk', name: 'yunpian-java-sdk', version:'1.2.7'
    compile group: 'redis.clients', name: 'jedis', version:'2.1.0'
    compile('com.unlto.twls:common-utils:1.0.0')
    compile('com.joyveb.ncps:common-db:1.0.0')
    compile 'com.google.code.gson:gson:2.6.2'
    compile('com.thoughtworks.xstream:xstream:1.3.1')
    compile('dom4j:dom4j:1.6.1')
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.3.2'
    compile 'org.json:json:20160810'
    compile 'com.squareup.okhttp3:okhttp:3.11.0'
    compile 'org.jdom:jdom2:2.0.5'
    runtime(group: 'mysql', name: 'mysql-connector-java', version:'8.0.15') {
exclude(module: 'protobuf-java')
    }
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'2.1.3.RELEASE'
}


bootJar {
    launchScript {
        script = file('src/main/resources/dump.script')
    }
}



task jar2Rpm(type: Rpm) {
    packageName = "${project.name}"
    version = "${version}"
    release = '1'
    os = LINUX
    user = "root"
    permissionGroup = "root"

    into "/opt/${packageName}"
    preInstall file('scripts/rpm/preinstall.sh')
    postInstall file('scripts/rpm/postinstall.sh')
    preUninstall file('scripts/rpm/preuninstall.sh')
    from("${buildDir}/libs/${project.name}-${version}.jar") {
        into ''
    }
    from("src/main/resources/jkpsale.conf") {
        into ''
    }
    from("src/main/resources/application.properties") {
        into ''
    }
    link("/opt/${packageName}/${project.name}.jar", "/opt/${packageName}/${project.name}-${version}.jar")
    link("/etc/init.d/${packageName}", "/opt/${packageName}/${project.name}.jar")
}
jar2Rpm.dependsOn bootJar